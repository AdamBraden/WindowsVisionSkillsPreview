// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.190111.3

#pragma once

WINRT_EXPORT namespace winrt::Microsoft::AI::Skills::SkillInterfacePreview {

enum class SkillFeatureKind;
struct ISkill;
struct ISkillBinding;
struct ISkillDescriptor;
struct ISkillExecutionDevice;
struct ISkillFeature;
struct ISkillFeatureDescriptor;
struct ISkillFeatureValue;
struct SkillVersion;

}

WINRT_EXPORT namespace winrt::Windows::Media {

struct VideoFrame;

}

WINRT_EXPORT namespace winrt::Microsoft::AI::Skills::SkillInterfacePreview {

struct ISkill;
struct ISkillBinding;
struct ISkillDescriptor;
struct ISkillFeatureDescriptor;
struct ISkillFeatureValue;

}

WINRT_EXPORT namespace winrt::Microsoft::AI::Skills::Vision::ObjectDetectorPreview {

enum class ObjectKind : int32_t
{
    Undefined = -1,
    Person = 0,
    Bicycle = 1,
    Car = 2,
    Motorbike = 3,
    Aeroplane = 4,
    Bus = 5,
    Train = 6,
    Truck = 7,
    Boat = 8,
    TrafficLight = 9,
    FireHydrant = 10,
    StopSign = 11,
    ParkingMeter = 12,
    Bench = 13,
    Bird = 14,
    Cat = 15,
    Dog = 16,
    Horse = 17,
    Sheep = 18,
    Cow = 19,
    Elephant = 20,
    Bear = 21,
    Zebra = 22,
    Giraffe = 23,
    Backpack = 24,
    Umbrella = 25,
    Handbag = 26,
    Tie = 27,
    Suitcase = 28,
    Frisbee = 29,
    Skis = 30,
    Snowboard = 31,
    SportsBall = 32,
    Kite = 33,
    BaseballBat = 34,
    BaseballGlove = 35,
    Skateboard = 36,
    Surfboard = 37,
    TennisRacket = 38,
    Bottle = 39,
    WineGlass = 40,
    Cup = 41,
    Fork = 42,
    Knife = 43,
    Spoon = 44,
    Bowl = 45,
    Banana = 46,
    Apple = 47,
    Sandwich = 48,
    Orange = 49,
    Broccoli = 50,
    Carrot = 51,
    HotDog = 52,
    Pizza = 53,
    Donut = 54,
    Cake = 55,
    Chair = 56,
    Sofa = 57,
    PottedPlant = 58,
    Bed = 59,
    DiningTable = 60,
    Toilet = 61,
    Tvmonitor = 62,
    Laptop = 63,
    Mouse = 64,
    Remote = 65,
    Keyboard = 66,
    CellPhone = 67,
    Microwave = 68,
    Oven = 69,
    Toaster = 70,
    Sink = 71,
    Refrigerator = 72,
    Book = 73,
    Clock = 74,
    Vase = 75,
    Scissors = 76,
    TeddyBear = 77,
    HairDryer = 78,
    Toothbrush = 79,
};

struct IObjectDetectorBinding;
struct IObjectDetectorDescription;
struct IObjectDetectorResult;
struct IObjectDetectorResultListDescriptorFactory;
struct IObjectDetectorResultListValue;
struct IObjectDetectorSkill;
struct ObjectDetectorBinding;
struct ObjectDetectorDescriptor;
struct ObjectDetectorResult;
struct ObjectDetectorResultListDescriptor;
struct ObjectDetectorResultListValue;
struct ObjectDetectorSkill;

}

namespace winrt::impl {

template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorBinding>{ using type = interface_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorDescription>{ using type = interface_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResult>{ using type = interface_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListDescriptorFactory>{ using type = interface_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListValue>{ using type = interface_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorSkill>{ using type = interface_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorBinding>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorDescriptor>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResult>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResultListDescriptor>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResultListValue>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorSkill>{ using type = class_category; };
template <> struct category<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectKind>{ using type = enum_category; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorBinding>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.IObjectDetectorBinding" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorDescription>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.IObjectDetectorDescription" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResult>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.IObjectDetectorResult" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListDescriptorFactory>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.IObjectDetectorResultListDescriptorFactory" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListValue>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.IObjectDetectorResultListValue" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorSkill>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.IObjectDetectorSkill" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorBinding>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.ObjectDetectorBinding" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorDescriptor>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.ObjectDetectorDescriptor" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResult>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.ObjectDetectorResult" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResultListDescriptor>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.ObjectDetectorResultListDescriptor" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResultListValue>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.ObjectDetectorResultListValue" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorSkill>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.ObjectDetectorSkill" }; };
template <> struct name<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectKind>{ static constexpr auto & value{ L"Microsoft.AI.Skills.Vision.ObjectDetectorPreview.ObjectKind" }; };
template <> struct guid_storage<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorBinding>{ static constexpr guid value{ 0x413697E5,0x770C,0x4EEB,{ 0xB5,0x26,0xA7,0x9C,0x4C,0xFD,0x4A,0xE7 } }; };
template <> struct guid_storage<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorDescription>{ static constexpr guid value{ 0x351E60CA,0x5EB3,0x4252,{ 0xB7,0x7E,0xF4,0x0C,0x27,0x51,0x99,0x6B } }; };
template <> struct guid_storage<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResult>{ static constexpr guid value{ 0xA0A9E94C,0xCB43,0x520A,{ 0x8B,0x6C,0x7A,0xCF,0x3B,0x67,0xEF,0x42 } }; };
template <> struct guid_storage<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListDescriptorFactory>{ static constexpr guid value{ 0x609C52DD,0xCACC,0x5E7C,{ 0xB7,0xF8,0xDB,0x52,0xB3,0x5F,0xFD,0xE4 } }; };
template <> struct guid_storage<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListValue>{ static constexpr guid value{ 0x521CD801,0x003C,0x5AC0,{ 0x8D,0xE5,0x4D,0xE6,0x62,0x5C,0x59,0x7C } }; };
template <> struct guid_storage<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorSkill>{ static constexpr guid value{ 0x6C9B2622,0x17E2,0x4784,{ 0x86,0xEE,0xFB,0x57,0x86,0x16,0xE8,0x49 } }; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorBinding>{ using type = Microsoft::AI::Skills::SkillInterfacePreview::ISkillBinding; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorDescriptor>{ using type = Microsoft::AI::Skills::SkillInterfacePreview::ISkillDescriptor; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResult>{ using type = Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResult; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResultListDescriptor>{ using type = Microsoft::AI::Skills::SkillInterfacePreview::ISkillFeatureDescriptor; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResultListValue>{ using type = Microsoft::AI::Skills::SkillInterfacePreview::ISkillFeatureValue; };
template <> struct default_interface<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorSkill>{ using type = Microsoft::AI::Skills::SkillInterfacePreview::ISkill; };

template <> struct abi<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorBinding>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL SetInputImageAsync(void* videoFrame, void** operation) noexcept = 0;
    virtual int32_t WINRT_CALL get_DetectedObjects(void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorDescription>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResult>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Rect(Windows::Foundation::Rect* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Kind(Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectKind* value) noexcept = 0;
};};

template <> struct abi<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListDescriptorFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* name, void* description, bool isRequired, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListValue>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL GetAsVectorView(void** result) noexcept = 0;
};};

template <> struct abi<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorSkill>{ struct type : IInspectable
{
};};

template <typename D>
struct consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorBinding
{
    Windows::Foundation::IAsyncAction SetInputImageAsync(Windows::Media::VideoFrame const& videoFrame) const;
    Windows::Foundation::Collections::IVectorView<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResult> DetectedObjects() const;
};
template <> struct consume<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorBinding> { template <typename D> using type = consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorBinding<D>; };

template <typename D>
struct consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorDescription
{
};
template <> struct consume<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorDescription> { template <typename D> using type = consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorDescription<D>; };

template <typename D>
struct consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorResult
{
    Windows::Foundation::Rect Rect() const;
    Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectKind Kind() const;
};
template <> struct consume<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResult> { template <typename D> using type = consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorResult<D>; };

template <typename D>
struct consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorResultListDescriptorFactory
{
    Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResultListDescriptor CreateInstance(param::hstring const& name, param::hstring const& description, bool isRequired) const;
};
template <> struct consume<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListDescriptorFactory> { template <typename D> using type = consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorResultListDescriptorFactory<D>; };

template <typename D>
struct consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorResultListValue
{
    Windows::Foundation::Collections::IVectorView<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::ObjectDetectorResult> GetAsVectorView() const;
};
template <> struct consume<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorResultListValue> { template <typename D> using type = consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorResultListValue<D>; };

template <typename D>
struct consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorSkill
{
};
template <> struct consume<Microsoft::AI::Skills::Vision::ObjectDetectorPreview::IObjectDetectorSkill> { template <typename D> using type = consume_Microsoft_AI_Skills_Vision_ObjectDetectorPreview_IObjectDetectorSkill<D>; };

}
